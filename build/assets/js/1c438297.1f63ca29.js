"use strict";(self.webpackChunkdip_docs=self.webpackChunkdip_docs||[]).push([[5658],{2623:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"wttp/wttp-storage","title":"WTTP Storage","description":"The BaseWTTPStorage contract is the core storage layer of the WTTP protocol, providing a sophisticated resource management system built on top of the Ethereum Storage Protocol (ESP). This contract manages file metadata, headers, content organization, and chunked storage for efficient blockchain-based web content.","source":"@site/docs/03-wttp/04-storage.md","sourceDirName":"03-wttp","slug":"/wttp/wttp-storage","permalink":"/docs/wttp/wttp-storage","draft":false,"unlisted":false,"editUrl":"https://github.com/TechnicallyWeb3/dip-docs/tree/main/packages/create-docusaurus/templates/shared/docs/03-wttp/04-storage.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"id":"wttp-storage","title":"WTTP Storage"},"sidebar":"tutorialSidebar","previous":{"title":"WTTP Permissions","permalink":"/docs/wttp/wttp-permissions"},"next":{"title":"WTTP Sites","permalink":"/docs/wttp/wttp-sites"}}');var a=t(4848),s=t(8453);const i={id:"wttp-storage",title:"WTTP Storage"},o="WTTP Storage Contract Guide",d={},c=[{value:"\u26a0\ufe0f Security Warning",id:"\ufe0f-security-warning",level:2},{value:"Contract Architecture",id:"contract-architecture",level:2},{value:"Core Storage Components",id:"core-storage-components",level:2},{value:"1. Header Management",id:"1-header-management",level:3},{value:"2. Metadata Management",id:"2-metadata-management",level:3},{value:"3. Resource Management",id:"3-resource-management",level:3},{value:"Data Registration Structure",id:"data-registration-structure",level:2},{value:"Implementing Custom Site Contracts",id:"implementing-custom-site-contracts",level:2},{value:"Basic Implementation",id:"basic-implementation",level:3},{value:"Advanced Implementation with Custom Headers",id:"advanced-implementation-with-custom-headers",level:3},{value:"Chunked Storage Implementation",id:"chunked-storage-implementation",level:2},{value:"Content Addressing and Deduplication",id:"content-addressing-and-deduplication",level:2},{value:"Storage Lifecycle Management",id:"storage-lifecycle-management",level:2},{value:"Creating Resources",id:"creating-resources",level:3},{value:"Updating Resources",id:"updating-resources",level:3},{value:"Deleting Resources",id:"deleting-resources",level:3},{value:"Error Handling and Validation",id:"error-handling-and-validation",level:2},{value:"Gas Optimization Strategies",id:"gas-optimization-strategies",level:2},{value:"1. Batch Operations",id:"1-batch-operations",level:3},{value:"2. Metadata Efficiency",id:"2-metadata-efficiency",level:3},{value:"3. Header Reuse",id:"3-header-reuse",level:3},{value:"Integration with BaseWTTPSite",id:"integration-with-basewttpsite",level:2},{value:"Best Practices for Custom Implementations",id:"best-practices-for-custom-implementations",level:2},{value:"1. Security First",id:"1-security-first",level:3},{value:"2. Error Handling",id:"2-error-handling",level:3},{value:"3. Gas Optimization",id:"3-gas-optimization",level:3},{value:"4. Resource Management",id:"4-resource-management",level:3},{value:"Common Pitfalls to Avoid",id:"common-pitfalls-to-avoid",level:2},{value:"Testing Your Implementation",id:"testing-your-implementation",level:2},{value:"Related Documentation",id:"related-documentation",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"wttp-storage-contract-guide",children:"WTTP Storage Contract Guide"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"BaseWTTPStorage"})," contract is the core storage layer of the WTTP protocol, providing a sophisticated resource management system built on top of the Ethereum Storage Protocol (ESP). This contract manages file metadata, headers, content organization, and chunked storage for efficient blockchain-based web content."]}),"\n",(0,a.jsx)(n.h2,{id:"\ufe0f-security-warning",children:"\u26a0\ufe0f Security Warning"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"CRITICAL"}),": The security of your WTTP site depends entirely on proper permission management. The ",(0,a.jsx)(n.code,{children:"BaseWTTPStorage"})," contract exposes internal functions that can be called by any contract that inherits from it. When implementing custom site contracts:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Never expose internal storage functions publicly"})," without proper access controls"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Always implement proper authorization checks"})," before calling internal functions"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsxs)(n.strong,{children:["Use the ",(0,a.jsx)(n.code,{children:"onlyAuthorized"})," modifier"]})," or similar access controls in your public functions"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Review all public functions"})," to ensure they don't allow unauthorized access to storage operations"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Test permission boundaries thoroughly"})," before deploying to mainnet"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"contract-architecture",children:"Contract Architecture"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502                BaseWTTPSite (Public Interface)             \u2502\r\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502\r\n\u2502  \u2502   HTTP      \u2502  \u2502  Security   \u2502  \u2502   Business Logic    \u2502 \u2502\r\n\u2502  \u2502  Methods    \u2502  \u2502  Controls   \u2502  \u2502   & Validation      \u2502 \u2502\r\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n                      \u2502\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502              BaseWTTPStorage (Internal Layer)              \u2502\r\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502\r\n\u2502  \u2502   Headers   \u2502  \u2502  Metadata   \u2502  \u2502     Resources       \u2502 \u2502\r\n\u2502  \u2502 Management  \u2502  \u2502 Management  \u2502  \u2502   Management        \u2502 \u2502\r\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n                      \u2502\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502                ESP DataPointRegistry                       \u2502\r\n\u2502              (Economic Incentives & Royalties)             \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n                      \u2502\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502                ESP DataPointStorage                        \u2502\r\n\u2502              (Raw Content Storage)                         \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,a.jsx)(n.h2,{id:"core-storage-components",children:"Core Storage Components"}),"\n",(0,a.jsx)(n.h3,{id:"1-header-management",children:"1. Header Management"}),"\n",(0,a.jsx)(n.p,{children:"Headers contain HTTP-like metadata and access control settings:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-solidity",children:"struct HeaderInfo {\r\n    CORSInfo cors;           // CORS settings and method permissions\r\n    CacheInfo cache;         // Caching and immutability settings\r\n    RedirectInfo redirect;   // Redirect configuration\r\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Key Functions:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"_createHeader(HeaderInfo memory _header)"})," - Creates new headers"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"_readHeader(string memory _path)"})," - Retrieves header for a resource"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"_updateHeader(bytes32 _headerAddress, HeaderInfo memory _header)"})," - Updates existing headers"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"_setDefaultHeader(HeaderInfo memory _header)"})," - Sets site-wide default headers"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"2-metadata-management",children:"2. Metadata Management"}),"\n",(0,a.jsx)(n.p,{children:"Resource metadata tracks file information and state:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-solidity",children:"struct ResourceMetadata {\r\n    ResourceProperties properties;  // Content type, length, etc.\r\n    uint256 size;                   // Total content size in bytes\r\n    uint256 version;                // Version number for updates\r\n    uint256 lastModified;           // Timestamp of last modification\r\n    bytes32 header;                 // Reference to header\r\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Key Functions:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"_readMetadata(string memory _path)"})," - Gets resource metadata"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"_updateMetadata(string memory _path, ResourceMetadata memory _metadata)"})," - Updates metadata"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"_updateMetadataStats(string memory _path)"})," - Updates timestamps and version"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"_deleteMetadata(string memory _path)"})," - Removes metadata (sets to zero)"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"3-resource-management",children:"3. Resource Management"}),"\n",(0,a.jsx)(n.p,{children:"Resources are stored as arrays of data point chunks:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-solidity",children:"mapping(string path => bytes32[]) private resource;  // Data point addresses\r\nmapping(string path => ResourceMetadata) private metadata;  // Resource info\r\nmapping(bytes32 header => HeaderInfo) private header;  // Header storage\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Key Functions:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"_createResource(string memory _path, DataRegistration memory _dataRegistration)"})," - Creates new data points"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"_readResource(string memory _path, Range memory _range)"})," - Retrieves resource chunks"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"_updateResource(string memory _path, bytes32 _dataPointAddress, uint256 _chunkIndex)"})," - Updates specific chunks"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"_uploadResource(string memory _path, DataRegistration[] memory _dataRegistration)"})," - Bulk upload"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"_deleteResource(string memory _path)"})," - Removes resource and metadata"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"data-registration-structure",children:"Data Registration Structure"}),"\n",(0,a.jsxs)(n.p,{children:["Content is registered using the ",(0,a.jsx)(n.code,{children:"DataRegistration"})," struct:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-solidity",children:"struct DataRegistration {\r\n    bytes data;        // Raw content bytes\r\n    address publisher; // Content publisher address\r\n    uint256 chunkIndex; // Position in resource array\r\n}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"implementing-custom-site-contracts",children:"Implementing Custom Site Contracts"}),"\n",(0,a.jsx)(n.h3,{id:"basic-implementation",children:"Basic Implementation"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-solidity",children:'// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport "./BaseWTTPStorage.sol";\r\n\r\ncontract MyCustomSite is BaseWTTPStorage {\r\n    constructor(\r\n        address _owner,\r\n        address _dpr,\r\n        HeaderInfo memory _defaultHeader\r\n    ) BaseWTTPStorage(_owner, _dpr) {\r\n        _setDefaultHeader(_defaultHeader);\r\n    }\r\n\r\n    // \u26a0\ufe0f SECURITY: Always implement proper access controls\r\n    function uploadContent(\r\n        string memory _path,\r\n        bytes memory _data,\r\n        address _publisher\r\n    ) external onlyRole(SITE_ADMIN_ROLE) {\r\n        // Create data registration\r\n        DataRegistration memory registration = DataRegistration({\r\n            data: _data,\r\n            publisher: _publisher,\r\n            chunkIndex: 0\r\n        });\r\n\r\n        // Upload content using internal function\r\n        _createResource(_path, registration);\r\n        \r\n        // Update metadata\r\n        ResourceMetadata memory metadata = ResourceMetadata({\r\n            properties: ResourceProperties({\r\n                contentType: "application/octet-stream",\r\n                contentLength: _data.length\r\n            }),\r\n            size: 0, // Will be calculated by _updateMetadata\r\n            version: 0, // Will be calculated by _updateMetadata\r\n            lastModified: 0, // Will be calculated by _updateMetadata\r\n            header: bytes32(0) // Use default header\r\n        });\r\n        \r\n        _updateMetadata(_path, metadata);\r\n    }\r\n\r\n    function getContent(string memory _path) external view returns (bytes32[] memory) {\r\n        ResourceResponse memory response = _readResource(_path, Range(0, 0));\r\n        return response.dataPoints;\r\n    }\r\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"advanced-implementation-with-custom-headers",children:"Advanced Implementation with Custom Headers"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-solidity",children:'contract AdvancedSite is BaseWTTPStorage {\r\n    constructor(\r\n        address _owner,\r\n        address _dpr,\r\n        HeaderInfo memory _defaultHeader\r\n    ) BaseWTTPStorage(_owner, _dpr) {\r\n        _setDefaultHeader(_defaultHeader);\r\n    }\r\n\r\n    function createResourceWithCustomHeader(\r\n        string memory _path,\r\n        bytes memory _data,\r\n        address _publisher,\r\n        HeaderInfo memory _customHeader\r\n    ) external onlyRole(SITE_ADMIN_ROLE) {\r\n        // Create custom header\r\n        bytes32 headerAddress = _createHeader(_customHeader);\r\n        \r\n        // Upload content\r\n        DataRegistration memory registration = DataRegistration({\r\n            data: _data,\r\n            publisher: _publisher,\r\n            chunkIndex: 0\r\n        });\r\n        _createResource(_path, registration);\r\n        \r\n        // Set metadata with custom header\r\n        ResourceMetadata memory metadata = ResourceMetadata({\r\n            properties: ResourceProperties({\r\n                contentType: "text/html",\r\n                contentLength: _data.length\r\n            }),\r\n            size: 0,\r\n            version: 0,\r\n            lastModified: 0,\r\n            header: headerAddress // Use custom header\r\n        });\r\n        \r\n        _updateMetadata(_path, metadata);\r\n    }\r\n\r\n    function updateResourceHeader(\r\n        string memory _path,\r\n        HeaderInfo memory _newHeader\r\n    ) external onlyRole(SITE_ADMIN_ROLE) {\r\n        // Create new header\r\n        bytes32 headerAddress = _createHeader(_newHeader);\r\n        \r\n        // Update metadata with new header\r\n        ResourceMetadata memory currentMetadata = _readMetadata(_path);\r\n        currentMetadata.header = headerAddress;\r\n        _updateMetadata(_path, currentMetadata);\r\n    }\r\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"chunked-storage-implementation",children:"Chunked Storage Implementation"}),"\n",(0,a.jsx)(n.p,{children:"For large files, implement chunked storage:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-solidity",children:'function uploadLargeFile(\r\n    string memory _path,\r\n    bytes[] memory _chunks,\r\n    address _publisher\r\n) external onlyRole(SITE_ADMIN_ROLE) {\r\n    // Prepare data registrations for all chunks\r\n    DataRegistration[] memory registrations = new DataRegistration[](_chunks.length);\r\n    \r\n    for (uint256 i = 0; i < _chunks.length; i++) {\r\n        registrations[i] = DataRegistration({\r\n            data: _chunks[i],\r\n            publisher: _publisher,\r\n            chunkIndex: i\r\n        });\r\n    }\r\n    \r\n    // Upload all chunks at once\r\n    _uploadResource(_path, registrations);\r\n    \r\n    // Calculate total size\r\n    uint256 totalSize = 0;\r\n    for (uint256 i = 0; i < _chunks.length; i++) {\r\n        totalSize += _chunks[i].length;\r\n    }\r\n    \r\n    // Set metadata\r\n    ResourceMetadata memory metadata = ResourceMetadata({\r\n        properties: ResourceProperties({\r\n            contentType: "application/octet-stream",\r\n            contentLength: totalSize\r\n        }),\r\n        size: 0, // Will be calculated\r\n        version: 0,\r\n        lastModified: 0,\r\n        header: bytes32(0)\r\n    });\r\n    \r\n    _updateMetadata(_path, metadata);\r\n}\r\n\r\nfunction getChunkRange(\r\n    string memory _path,\r\n    uint256 _startChunk,\r\n    uint256 _endChunk\r\n) external view returns (bytes32[] memory) {\r\n    Range memory range = Range({\r\n        start: int256(_startChunk),\r\n        end: int256(_endChunk)\r\n    });\r\n    \r\n    ResourceResponse memory response = _readResource(_path, range);\r\n    return response.dataPoints;\r\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"content-addressing-and-deduplication",children:"Content Addressing and Deduplication"}),"\n",(0,a.jsx)(n.p,{children:"The contract uses ESP's content addressing system:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-solidity",children:"// Content addresses are calculated by ESP\r\nbytes32 dataPointAddress = DPS().calculateAddress(data);\r\n\r\n// Identical content gets the same address (automatic deduplication)\r\n// Different content gets different addresses\n"})}),"\n",(0,a.jsx)(n.h2,{id:"storage-lifecycle-management",children:"Storage Lifecycle Management"}),"\n",(0,a.jsx)(n.h3,{id:"creating-resources",children:"Creating Resources"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Prepare Data"}),": Create ",(0,a.jsx)(n.code,{children:"DataRegistration"})," with content and publisher"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Upload Content"}),": Call ",(0,a.jsx)(n.code,{children:"_createResource()"})," to register with ESP"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Set Metadata"}),": Call ",(0,a.jsx)(n.code,{children:"_updateMetadata()"})," with resource information"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Configure Headers"}),": Use ",(0,a.jsx)(n.code,{children:"_createHeader()"})," for custom access controls"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"updating-resources",children:"Updating Resources"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Check Permissions"}),": Ensure caller has appropriate role"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Update Content"}),": Use ",(0,a.jsx)(n.code,{children:"_updateResource()"})," for chunk updates"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Refresh Metadata"}),": Call ",(0,a.jsx)(n.code,{children:"_updateMetadataStats()"})," to update timestamps"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Preserve Headers"}),": Keep existing header references unless changing"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"deleting-resources",children:"Deleting Resources"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Remove Content"}),": Call ",(0,a.jsx)(n.code,{children:"_deleteResource()"})," to clear all data"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Clean Metadata"}),": Metadata is automatically reset to zero values"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Preserve ESP Data"}),": Actual content remains in ESP (immutable)"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"error-handling-and-validation",children:"Error Handling and Validation"}),"\n",(0,a.jsx)(n.p,{children:"The contract includes several error types:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-solidity",children:'// Range validation\r\nrevert _416("Out of Bounds", Range(0, currentLength), requestedIndex);\r\n\r\n// Header validation\r\nrevert InvalidHeader(headerInfo);\r\n\r\n// Resource state validation\r\n// (Handled by calling contract\'s access controls)\n'})}),"\n",(0,a.jsx)(n.h2,{id:"gas-optimization-strategies",children:"Gas Optimization Strategies"}),"\n",(0,a.jsx)(n.h3,{id:"1-batch-operations",children:"1. Batch Operations"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-solidity",children:"// Use _uploadResource() for multiple chunks instead of individual _createResource() calls\r\nDataRegistration[] memory batch = new DataRegistration[](chunkCount);\r\n// ... populate batch array\r\n_uploadResource(path, batch);\n"})}),"\n",(0,a.jsx)(n.h3,{id:"2-metadata-efficiency",children:"2. Metadata Efficiency"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-solidity",children:"// Only update metadata when necessary\r\nif (needsMetadataUpdate) {\r\n    _updateMetadataStats(path);\r\n}\n"})}),"\n",(0,a.jsx)(n.h3,{id:"3-header-reuse",children:"3. Header Reuse"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-solidity",children:"// Reuse existing headers when possible\r\nbytes32 existingHeader = _readMetadata(path).header;\r\nif (existingHeader != bytes32(0)) {\r\n    // Use existing header instead of creating new one\r\n}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"integration-with-basewttpsite",children:"Integration with BaseWTTPSite"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"BaseWTTPSite"})," contract extends ",(0,a.jsx)(n.code,{children:"BaseWTTPStorage"})," and provides HTTP-like methods:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-solidity",children:"// BaseWTTPSite uses internal storage functions with proper access controls\r\nfunction PUT(PUTRequest memory putRequest) external payable {\r\n    // Access control check\r\n    _OPTIONS(putRequest.head.path, Method.PUT);\r\n    \r\n    // Use internal storage functions\r\n    if (putRequest.data.length > 0) {\r\n        _uploadResource(putRequest.head.path, putRequest.data);\r\n    }\r\n    \r\n    // Update metadata\r\n    _updateMetadata(putRequest.head.path, /* metadata */);\r\n}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"best-practices-for-custom-implementations",children:"Best Practices for Custom Implementations"}),"\n",(0,a.jsx)(n.h3,{id:"1-security-first",children:"1. Security First"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Always implement proper access controls"}),"\n",(0,a.jsx)(n.li,{children:"Never expose internal functions publicly"}),"\n",(0,a.jsx)(n.li,{children:"Use role-based permissions consistently"}),"\n",(0,a.jsx)(n.li,{children:"Test all permission boundaries"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"2-error-handling",children:"2. Error Handling"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Implement comprehensive error checking"}),"\n",(0,a.jsx)(n.li,{children:"Provide meaningful error messages"}),"\n",(0,a.jsx)(n.li,{children:"Handle edge cases gracefully"}),"\n",(0,a.jsx)(n.li,{children:"Validate all inputs"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"3-gas-optimization",children:"3. Gas Optimization"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Batch operations when possible"}),"\n",(0,a.jsx)(n.li,{children:"Reuse headers and metadata"}),"\n",(0,a.jsx)(n.li,{children:"Implement efficient chunking strategies"}),"\n",(0,a.jsx)(n.li,{children:"Monitor gas usage patterns"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"4-resource-management",children:"4. Resource Management"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Implement proper cleanup procedures"}),"\n",(0,a.jsx)(n.li,{children:"Monitor resource usage"}),"\n",(0,a.jsx)(n.li,{children:"Implement backup and recovery"}),"\n",(0,a.jsx)(n.li,{children:"Handle resource conflicts"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"common-pitfalls-to-avoid",children:"Common Pitfalls to Avoid"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Exposing Internal Functions"}),": Never make internal storage functions public"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Missing Access Controls"}),": Always check permissions before storage operations"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Incomplete Metadata"}),": Ensure all required metadata fields are set"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Header Mismatches"}),": Verify header origins array length matches methods"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Chunk Index Errors"}),": Ensure chunk indices are within bounds"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Gas Limit Issues"}),": Test with realistic data sizes"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"testing-your-implementation",children:"Testing Your Implementation"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-solidity",children:'// Test access controls\r\nfunction testAccessControl() public {\r\n    // Should revert for unauthorized users\r\n    vm.expectRevert();\r\n    mySite.uploadContent("/test", data, publisher);\r\n    \r\n    // Should succeed for authorized users\r\n    vm.prank(authorizedUser);\r\n    mySite.uploadContent("/test", data, publisher);\r\n}\r\n\r\n// Test chunking\r\nfunction testChunking() public {\r\n    bytes[] memory chunks = createTestChunks(1024 * 1024); // 1MB\r\n    mySite.uploadLargeFile("/large", chunks, publisher);\r\n    \r\n    // Verify all chunks are stored\r\n    bytes32[] memory storedChunks = mySite.getContent("/large");\r\n    assertEq(storedChunks.length, chunks.length);\r\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"related-documentation",children:"Related Documentation"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"/docs/wttp/wttp-sites",children:"BaseWTTPSite Implementation"})," - How BaseWTTPSite uses BaseWTTPStorage"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"/docs/wttp/wttp-permissions",children:"Permission Management"})," - Understanding WTTP access controls"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"/docs/esp/esp-overview",children:"ESP Integration"})," - Working with the Ethereum Storage Protocol"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var r=t(6540);const a={},s=r.createContext(a);function i(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);
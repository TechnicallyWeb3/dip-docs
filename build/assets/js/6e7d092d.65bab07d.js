"use strict";(self.webpackChunkdip_docs=self.webpackChunkdip_docs||[]).push([[8438],{3158:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"handler/handler-installation","title":"Handler Installation","description":"This guide covers installing and setting up the DIP Handler for your project. The handler supports both Node.js and browser environments with full TypeScript support and CommonJS compatibility.","source":"@site/docs/04-handler/02-installation.md","sourceDirName":"04-handler","slug":"/handler/handler-installation","permalink":"/docs/handler/handler-installation","draft":false,"unlisted":false,"editUrl":"https://github.com/TechnicallyWeb3/dip-docs/tree/main/packages/create-docusaurus/templates/shared/docs/04-handler/02-installation.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"handler-installation","title":"Handler Installation"},"sidebar":"tutorialSidebar","previous":{"title":"Handler Overview","permalink":"/docs/handler/handler-overview"},"next":{"title":"Handler Examples","permalink":"/docs/handler/handler-examples"}}');var s=r(4848),l=r(8453);const t={id:"handler-installation",title:"Handler Installation"},o="DIP Handler Installation",a={},d=[{value:"Installation",id:"installation",level:2},{value:"NPM Installation",id:"npm-installation",level:3},{value:"Yarn Installation",id:"yarn-installation",level:3},{value:"PNPM Installation",id:"pnpm-installation",level:3},{value:"Dependencies",id:"dependencies",level:2},{value:"Required Dependencies",id:"required-dependencies",level:3},{value:"Optional Dependencies",id:"optional-dependencies",level:3},{value:"Environment Setup",id:"environment-setup",level:2},{value:"Node.js Environment",id:"nodejs-environment",level:3},{value:"Basic Setup",id:"basic-setup",level:4},{value:"With Custom Provider",id:"with-custom-provider",level:4},{value:"Browser Environment",id:"browser-environment",level:3},{value:"ES Modules",id:"es-modules",level:4},{value:"UMD Build",id:"umd-build",level:4},{value:"With Bundlers (Webpack, Vite, etc.)",id:"with-bundlers-webpack-vite-etc",level:4},{value:"Configuration Options",id:"configuration-options",level:2},{value:"Constructor Parameters",id:"constructor-parameters",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Chain Aliases",id:"chain-aliases",level:4},{value:"Advanced Configuration",id:"advanced-configuration",level:3},{value:"Custom RPC Endpoints",id:"custom-rpc-endpoints",level:4},{value:"Multiple Network Support",id:"multiple-network-support",level:4},{value:"TypeScript Configuration",id:"typescript-configuration",level:2},{value:"tsconfig.json",id:"tsconfigjson",level:3},{value:"Type Definitions",id:"type-definitions",level:3},{value:"Environment-Specific Setup",id:"environment-specific-setup",level:2},{value:"Development Environment",id:"development-environment",level:3},{value:"Local Development",id:"local-development",level:4},{value:"Testing Environment",id:"testing-environment",level:4},{value:"Production Environment",id:"production-environment",level:3},{value:"Mainnet Configuration",id:"mainnet-configuration",level:4},{value:"Error Handling",id:"error-handling",level:4},{value:"Browser Compatibility",id:"browser-compatibility",level:2},{value:"Modern Browsers",id:"modern-browsers",level:3},{value:"Module Support",id:"module-support",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Installation Issues",id:"common-installation-issues",level:3},{value:"1. Peer Dependency Warnings",id:"1-peer-dependency-warnings",level:4},{value:"2. TypeScript Errors",id:"2-typescript-errors",level:4},{value:"3. Module Resolution Issues",id:"3-module-resolution-issues",level:4},{value:"Network Configuration",id:"network-configuration",level:3},{value:"RPC Endpoint Issues",id:"rpc-endpoint-issues",level:4},{value:"Chain ID Mismatches",id:"chain-id-mismatches",level:4},{value:"Next Steps",id:"next-steps",level:2},{value:"Related Documentation",id:"related-documentation",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"dip-handler-installation",children:"DIP Handler Installation"})}),"\n",(0,s.jsx)(n.p,{children:"This guide covers installing and setting up the DIP Handler for your project. The handler supports both Node.js and browser environments with full TypeScript support and CommonJS compatibility."}),"\n",(0,s.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(n.h3,{id:"npm-installation",children:"NPM Installation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm install @wttp/handler\n"})}),"\n",(0,s.jsx)(n.h3,{id:"yarn-installation",children:"Yarn Installation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"yarn add @wttp/handler\n"})}),"\n",(0,s.jsx)(n.h3,{id:"pnpm-installation",children:"PNPM Installation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"pnpm add @wttp/handler\n"})}),"\n",(0,s.jsx)(n.h2,{id:"dependencies",children:"Dependencies"}),"\n",(0,s.jsx)(n.p,{children:"The handler has the following peer dependencies:"}),"\n",(0,s.jsx)(n.h3,{id:"required-dependencies",children:"Required Dependencies"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"ethers"}),": ",(0,s.jsx)(n.code,{children:"^6.14.4"})," - For blockchain interactions and cryptographic operations"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"@wttp/core"}),": ",(0,s.jsx)(n.code,{children:"^0.5.3"})," - Core WTTP protocol definitions and types"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"optional-dependencies",children:"Optional Dependencies"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"mime-types"}),": ",(0,s.jsx)(n.code,{children:"^3.0.1"})," - For MIME type detection (included but can be overridden)"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"environment-setup",children:"Environment Setup"}),"\n",(0,s.jsx)(n.h3,{id:"nodejs-environment",children:"Node.js Environment"}),"\n",(0,s.jsx)(n.h4,{id:"basic-setup",children:"Basic Setup"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { WTTPHandler } from '@wttp/handler';\r\n\r\n// Create handler instance\r\nconst handler = new WTTPHandler();\n"})}),"\n",(0,s.jsx)(n.h4,{id:"with-custom-provider",children:"With Custom Provider"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { ethers } from 'ethers';\r\nimport { WTTPHandler } from '@wttp/handler';\r\n\r\n// Create custom provider\r\nconst provider = new ethers.JsonRpcProvider('https://sepolia.infura.io/v3/YOUR_KEY');\r\nconst signer = new ethers.Wallet('YOUR_PRIVATE_KEY', provider);\r\n\r\n// Create handler with custom signer\r\nconst handler = new WTTPHandler(signer, 'sepolia');\n"})}),"\n",(0,s.jsx)(n.h3,{id:"browser-environment",children:"Browser Environment"}),"\n",(0,s.jsx)(n.h4,{id:"es-modules",children:"ES Modules"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:"<script type=\"module\">\r\n  import { WTTPHandler } from 'https://unpkg.com/@wttp/handler@latest/dist/esm/src/index.js';\r\n  \r\n  const handler = new WTTPHandler();\r\n<\/script>\n"})}),"\n",(0,s.jsx)(n.h4,{id:"umd-build",children:"UMD Build"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<script src="https://unpkg.com/@wttp/handler@latest/dist/umd/index.js"><\/script>\r\n<script>\r\n  const handler = new WTTPHandler();\r\n<\/script>\n'})}),"\n",(0,s.jsx)(n.h4,{id:"with-bundlers-webpack-vite-etc",children:"With Bundlers (Webpack, Vite, etc.)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { WTTPHandler } from '@wttp/handler';\r\n\r\nconst handler = new WTTPHandler();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,s.jsx)(n.h3,{id:"constructor-parameters",children:"Constructor Parameters"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const handler = new WTTPHandler(signer?, defaultChain?);\n"})}),"\n",(0,s.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"signer"})," (optional): ",(0,s.jsx)(n.code,{children:"ethers.Signer"})," - Custom signer for authenticated operations"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"defaultChain"})," (optional): ",(0,s.jsx)(n.code,{children:"string | number"})," - Default chain ID or alias (fallback when no chain specified in URL)"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"chain-aliases",children:"Chain Aliases"}),"\n",(0,s.jsx)(n.p,{children:"The handler supports convenient chain aliases:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// String aliases\r\nconst handler1 = new WTTPHandler(undefined, 'sepolia');    // Sepolia testnet\r\nconst handler2 = new WTTPHandler(undefined, 'mainnet');    // Ethereum mainnet\r\nconst handler3 = new WTTPHandler(undefined, 'polygon');    // Polygon\r\nconst handler4 = new WTTPHandler(undefined, 'base');       // Base\r\nconst handler5 = new WTTPHandler(undefined, 'localhost');  // Local development\r\n\r\n// Numeric chain IDs\r\nconst handler6 = new WTTPHandler(undefined, 11155111);     // Sepolia\r\nconst handler7 = new WTTPHandler(undefined, 1);            // Mainnet\r\nconst handler8 = new WTTPHandler(undefined, 137);          // Polygon\n"})}),"\n",(0,s.jsx)(n.h3,{id:"advanced-configuration",children:"Advanced Configuration"}),"\n",(0,s.jsx)(n.h4,{id:"custom-rpc-endpoints",children:"Custom RPC Endpoints"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { ethers } from 'ethers';\r\n\r\n// Create custom provider with specific RPC\r\nconst customProvider = new ethers.JsonRpcProvider('https://your-custom-rpc.com');\r\nconst signer = new ethers.Wallet('private-key', customProvider);\r\n\r\nconst handler = new WTTPHandler(signer, 'sepolia');\n"})}),"\n",(0,s.jsx)(n.h4,{id:"multiple-network-support",children:"Multiple Network Support"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// Create handlers for different default networks\r\nconst handlers = {\r\n  sepolia: new WTTPHandler(undefined, 'sepolia'),\r\n  mainnet: new WTTPHandler(undefined, 'mainnet'),\r\n  polygon: new WTTPHandler(undefined, 'polygon'),\r\n  localhost: new WTTPHandler(undefined, 'localhost')\r\n};\r\n\r\n// Chain selection happens in the URL, not the handler\r\n// These will all work with any handler:\r\nconst response1 = await handlers.sepolia.fetch('wttp://site.eth:sepolia/page.html');\r\nconst response2 = await handlers.sepolia.fetch('wttp://site.eth:mainnet/page.html');\r\nconst response3 = await handlers.sepolia.fetch('wttp://site.eth:polygon/page.html');\r\n\r\n// Default chain is only used when no chain is specified in URL\r\nconst response4 = await handlers.sepolia.fetch('wttp://site.eth/page.html'); // Uses sepolia as default\n"})}),"\n",(0,s.jsx)(n.h2,{id:"typescript-configuration",children:"TypeScript Configuration"}),"\n",(0,s.jsx)(n.h3,{id:"tsconfigjson",children:"tsconfig.json"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\r\n  "compilerOptions": {\r\n    "target": "ES2020",\r\n    "module": "ESNext",\r\n    "moduleResolution": "node",\r\n    "strict": true,\r\n    "esModuleInterop": true,\r\n    "skipLibCheck": true,\r\n    "forceConsistentCasingInFileNames": true,\r\n    "types": ["node"]\r\n  }\r\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"type-definitions",children:"Type Definitions"}),"\n",(0,s.jsx)(n.p,{children:"The handler provides full TypeScript support:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { \r\n  WTTPHandler, \r\n  wURL, \r\n  Method, \r\n  WTTPFetchOptions, \r\n  SimpleResponse \r\n} from '@wttp/handler';\r\n\r\n// Type-safe usage\r\nconst handler: WTTPHandler = new WTTPHandler();\r\nconst options: WTTPFetchOptions = {\r\n  method: Method.GET,\r\n  redirect: \"follow\"\r\n};\r\nconst response: SimpleResponse = await handler.fetch(url, options);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"environment-specific-setup",children:"Environment-Specific Setup"}),"\n",(0,s.jsx)(n.h3,{id:"development-environment",children:"Development Environment"}),"\n",(0,s.jsx)(n.h4,{id:"local-development",children:"Local Development"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// For local development with Hardhat\r\nconst handler = new WTTPHandler(undefined, 'localhost');\r\n\r\n// Connect to local node\r\nconst localProvider = new ethers.JsonRpcProvider('http://localhost:8545');\r\nconst localSigner = new ethers.Wallet('0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80', localProvider);\r\nconst localHandler = new WTTPHandler(localSigner, 'localhost');\n"})}),"\n",(0,s.jsx)(n.h4,{id:"testing-environment",children:"Testing Environment"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// For testing with Sepolia\r\nconst testHandler = new WTTPHandler(undefined, 'sepolia');\r\n\r\n// Mock handler for unit tests\r\nconst mockHandler = {\r\n  fetch: jest.fn().mockResolvedValue({\r\n    status: 200,\r\n    headers: {},\r\n    body: 'mock content'\r\n  })\r\n};\n"})}),"\n",(0,s.jsx)(n.h3,{id:"production-environment",children:"Production Environment"}),"\n",(0,s.jsx)(n.h4,{id:"mainnet-configuration",children:"Mainnet Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// Production setup with secure key management\r\nconst productionHandler = new WTTPHandler(undefined, 'mainnet');\r\n\r\n// With environment variables\r\nconst signer = new ethers.Wallet(process.env.PRIVATE_KEY!);\r\nconst productionHandler = new WTTPHandler(signer, 'mainnet');\n"})}),"\n",(0,s.jsx)(n.h4,{id:"error-handling",children:"Error Handling"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const handler = new WTTPHandler();\r\n\r\ntry {\r\n  const response = await handler.fetch('wttp://site.eth:sepolia/page.html');\r\n  if (response.status === 200) {\r\n    console.log('Success:', await response.text());\r\n  } else {\r\n    console.error('HTTP Error:', response.status);\r\n  }\r\n} catch (error) {\r\n  console.error('Network Error:', error);\r\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"browser-compatibility",children:"Browser Compatibility"}),"\n",(0,s.jsx)(n.h3,{id:"modern-browsers",children:"Modern Browsers"}),"\n",(0,s.jsx)(n.p,{children:"The handler works in all modern browsers that support:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"ES2020 features"}),"\n",(0,s.jsx)(n.li,{children:"Fetch API"}),"\n",(0,s.jsx)(n.li,{children:"Web Crypto API (for cryptographic operations)"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"module-support",children:"Module Support"}),"\n",(0,s.jsx)(n.p,{children:"The handler supports both ES modules and CommonJS:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"ES Modules"}),": ",(0,s.jsx)(n.code,{children:"import { WTTPHandler } from '@wttp/handler'"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"CommonJS"}),": ",(0,s.jsx)(n.code,{children:"const { WTTPHandler } = require('@wttp/handler')"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Browser"}),": Works in Electron, Node.js, and modern browsers"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsx)(n.h3,{id:"common-installation-issues",children:"Common Installation Issues"}),"\n",(0,s.jsx)(n.h4,{id:"1-peer-dependency-warnings",children:"1. Peer Dependency Warnings"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# If you see peer dependency warnings\r\nnpm install ethers@^6.14.4 @wttp/core@^0.5.3\n"})}),"\n",(0,s.jsx)(n.h4,{id:"2-typescript-errors",children:"2. TypeScript Errors"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Install type definitions\r\nnpm install --save-dev @types/node\n"})}),"\n",(0,s.jsx)(n.h4,{id:"3-module-resolution-issues",children:"3. Module Resolution Issues"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// Use explicit imports if needed\r\nimport { WTTPHandler } from '@wttp/handler/dist/esm/src/index.js';\r\n\r\n// Or use CommonJS\r\nconst { WTTPHandler } = require('@wttp/handler/dist/cjs/src/index.js');\n"})}),"\n",(0,s.jsx)(n.h3,{id:"network-configuration",children:"Network Configuration"}),"\n",(0,s.jsx)(n.h4,{id:"rpc-endpoint-issues",children:"RPC Endpoint Issues"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// The handler automatically uses the appropriate RPC for each chain\r\n// You can test connectivity by checking the chain configuration\r\nimport { config } from '@wttp/core';\r\n\r\nconsole.log('Available chains:', Object.keys(config.chains));\r\nconsole.log('Sepolia RPCs:', config.chains[11155111].rpcsList);\n"})}),"\n",(0,s.jsx)(n.h4,{id:"chain-id-mismatches",children:"Chain ID Mismatches"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// Verify chain ID\r\nconst handler = new WTTPHandler(undefined, 'sepolia');\r\nconst url = new wURL('wttp://site.eth:sepolia/page.html');\r\nconsole.log('Expected chain ID:', 11155111);\r\nconsole.log('URL chain ID:', url.alias);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,s.jsx)(n.p,{children:"After installation, you can:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Read the Overview"}),": Understand the handler's capabilities"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Check Examples"}),": See practical usage patterns"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Explore WTTP"}),": Learn about the underlying protocol"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Build Applications"}),": Start developing with the handler"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"related-documentation",children:"Related Documentation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/handler/handler-overview",children:"Handler Overview"})," - Understanding the handler"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/handler/handler-examples",children:"Examples"})," - Usage examples and patterns"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/handler/handler-roadmap",children:"Roadmap"})," - Development timeline and future plans"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/wttp/wttp-methods",children:"WTTP Methods"})," - Understanding WTTP protocol methods"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>o});var i=r(6540);const s={},l=i.createContext(s);function t(e){const n=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);
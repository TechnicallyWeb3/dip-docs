"use strict";(self.webpackChunkdip_docs=self.webpackChunkdip_docs||[]).push([[1726],{3872:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"wttp/wttp-sites","title":"WTTP Sites","description":"WTTP Site provides comprehensive tools for managing your on-chain websites, from initial deployment to ongoing maintenance and updates. This guide covers all aspects of site lifecycle management.","source":"@site/docs/03-wttp/05-sites.md","sourceDirName":"03-wttp","slug":"/wttp/wttp-sites","permalink":"/docs/wttp/wttp-sites","draft":false,"unlisted":false,"editUrl":"https://github.com/TechnicallyWeb3/dip-docs/tree/main/packages/create-docusaurus/templates/shared/docs/03-wttp/05-sites.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"id":"wttp-sites","title":"WTTP Sites"},"sidebar":"tutorialSidebar","previous":{"title":"WTTP Storage","permalink":"/docs/wttp/wttp-storage"},"next":{"title":"WTTP Gateway","permalink":"/docs/wttp/wttp-gateway"}}');var i=t(4848),s=t(8453);const a={id:"wttp-sites",title:"WTTP Sites"},o="WTTP Sites",c={},l=[{value:"Site Lifecycle Overview",id:"site-lifecycle-overview",level:2},{value:"Site Deployment",id:"site-deployment",level:2},{value:"Basic Deployment",id:"basic-deployment",level:3},{value:"Advanced Deployment",id:"advanced-deployment",level:3},{value:"Deployment Parameters",id:"deployment-parameters",level:3},{value:"Site Configuration",id:"site-configuration",level:2},{value:"Initial Setup",id:"initial-setup",level:3},{value:"CORS Configuration",id:"cors-configuration",level:3},{value:"Cache Configuration",id:"cache-configuration",level:3},{value:"Content Management",id:"content-management",level:2},{value:"Uploading Content",id:"uploading-content",level:3},{value:"Programmatic Upload",id:"programmatic-upload",level:3},{value:"Batch Upload",id:"batch-upload",level:3},{value:"Site Monitoring",id:"site-monitoring",level:2},{value:"Health Checks",id:"health-checks",level:3},{value:"Usage Analytics",id:"usage-analytics",level:3},{value:"Performance Monitoring",id:"performance-monitoring",level:3},{value:"Content Updates",id:"content-updates",level:2},{value:"Updating Existing Content",id:"updating-existing-content",level:3},{value:"Version Control",id:"version-control",level:3},{value:"Rollback Capability",id:"rollback-capability",level:3},{value:"Site Maintenance",id:"site-maintenance",level:2},{value:"Content Cleanup",id:"content-cleanup",level:3},{value:"Performance Optimization",id:"performance-optimization",level:3},{value:"Security Updates",id:"security-updates",level:3},{value:"Site Backup and Recovery",id:"site-backup-and-recovery",level:2},{value:"Backup Creation",id:"backup-creation",level:3},{value:"Site Recovery",id:"site-recovery",level:3},{value:"Multi-Site Management",id:"multi-site-management",level:2},{value:"Site Registry",id:"site-registry",level:3},{value:"Site Federation",id:"site-federation",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Debugging Tools",id:"debugging-tools",level:3},{value:"Recovery Procedures",id:"recovery-procedures",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"1. Site Design",id:"1-site-design",level:3},{value:"2. Content Management",id:"2-content-management",level:3},{value:"3. Security",id:"3-security",level:3},{value:"4. Performance",id:"4-performance",level:3},{value:"Related Documentation",id:"related-documentation",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"wttp-sites",children:"WTTP Sites"})}),"\n",(0,i.jsx)(n.p,{children:"WTTP Site provides comprehensive tools for managing your on-chain websites, from initial deployment to ongoing maintenance and updates. This guide covers all aspects of site lifecycle management."}),"\n",(0,i.jsx)(n.h2,{id:"site-lifecycle-overview",children:"Site Lifecycle Overview"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Deployment \u2192 Configuration \u2192 Content Upload \u2192 Management \u2192 Updates \u2192 Maintenance\r\n     \u2193            \u2193              \u2193             \u2193          \u2193         \u2193\r\n  Deploy      Set Headers    Upload Files   Monitor    Update    Optimize\r\n  Contract    & Permissions  & Resources    Usage      Content   Performance\n"})}),"\n",(0,i.jsx)(n.h2,{id:"site-deployment",children:"Site Deployment"}),"\n",(0,i.jsx)(n.h3,{id:"basic-deployment",children:"Basic Deployment"}),"\n",(0,i.jsx)(n.p,{children:"Deploy a new site with default settings:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npx hardhat site:deploy --network localhost\n"})}),"\n",(0,i.jsx)(n.h3,{id:"advanced-deployment",children:"Advanced Deployment"}),"\n",(0,i.jsx)(n.p,{children:"Deploy with custom configuration:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npx hardhat site:deploy \\\r\n  --header-preset dynamic-api \\\r\n  --cors-preset allow-wttp \\\r\n  --cache-preset standard \\\r\n  --network sepolia\n"})}),"\n",(0,i.jsx)(n.h3,{id:"deployment-parameters",children:"Deployment Parameters"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Options"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"--header-preset"})}),(0,i.jsx)(n.td,{children:"Pre-configured header settings"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"static-website"}),", ",(0,i.jsx)(n.code,{children:"dynamic-api"}),", ",(0,i.jsx)(n.code,{children:"immutable"})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"--cors-preset"})}),(0,i.jsx)(n.td,{children:"CORS policy configuration"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"allow-all"}),", ",(0,i.jsx)(n.code,{children:"same-origin"}),", ",(0,i.jsx)(n.code,{children:"allow-wttp"})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"--cache-preset"})}),(0,i.jsx)(n.td,{children:"Caching behavior"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"aggressive"}),", ",(0,i.jsx)(n.code,{children:"standard"}),", ",(0,i.jsx)(n.code,{children:"none"})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"--network"})}),(0,i.jsx)(n.td,{children:"Target blockchain network"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"localhost"}),", ",(0,i.jsx)(n.code,{children:"sepolia"}),", ",(0,i.jsx)(n.code,{children:"polygon"})]})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"site-configuration",children:"Site Configuration"}),"\n",(0,i.jsx)(n.h3,{id:"initial-setup",children:"Initial Setup"}),"\n",(0,i.jsx)(n.p,{children:"After deployment, configure your site:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Set up basic headers\r\nconst headerInfo: HeaderInfo = {\r\n  cors: {\r\n    methods: 0xffff, // Allow all methods\r\n    origins: Array(9).fill(PUBLIC_ROLE) // Allow all origins (this is dangerous since public will be able to write, update, delete and alter all resources on your site)\r\n  },\r\n  cache: {\r\n    maxAge: 3600, // 1 hour cache\r\n    immutableFlag: false\r\n  },\r\n  redirect: {\r\n    code: 0, // No redirect\r\n    location: ''\r\n  }\r\n};\r\n\r\nawait site.DEFINE('/', headerInfo);\n"})}),"\n",(0,i.jsx)(n.h3,{id:"cors-configuration",children:"CORS Configuration"}),"\n",(0,i.jsx)(n.p,{children:"Configure cross-origin resource sharing:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Allow specific roles for different methods\r\nconst corsOrigins = [\r\n  PUBLIC_ROLE,      // HEAD\r\n  PUBLIC_ROLE,      // GET\r\n  PUBLIC_ROLE,      // POST\r\n  EDITOR_ROLE,      // PUT\r\n  EDITOR_ROLE,      // PATCH\r\n  SITE_ADMIN_ROLE,  // DELETE\r\n  PUBLIC_ROLE,      // OPTIONS\r\n  PUBLIC_ROLE,      // LOCATE\r\n  SITE_ADMIN_ROLE   // DEFINE\r\n];\r\n\r\nconst headerInfo: HeaderInfo = {\r\n  cors: {\r\n    methods: 0xffff,\r\n    origins: corsOrigins\r\n  },\r\n  cache: { maxAge: 3600, immutableFlag: false },\r\n  redirect: { code: 0, location: '' }\r\n};\n"})}),"\n",(0,i.jsx)(n.h3,{id:"cache-configuration",children:"Cache Configuration"}),"\n",(0,i.jsx)(n.p,{children:"Set up caching policies:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Aggressive caching for static assets\r\nconst staticHeader: HeaderInfo = {\r\n  cors: { methods: 0x004, origins: Array(9).fill(PUBLIC_ROLE) }, // GET only\r\n  cache: { maxAge: 31536000, immutableFlag: true }, // 1 year\r\n  redirect: { code: 0, location: '' }\r\n};\r\n\r\nawait site.DEFINE('/static/*', staticHeader);\r\n\r\n// No caching for dynamic content\r\nconst dynamicHeader: HeaderInfo = {\r\n  cors: { methods: 0xffff, origins: Array(9).fill(PUBLIC_ROLE) },\r\n  cache: { maxAge: 0, immutableFlag: false },\r\n  redirect: { code: 0, location: '' }\r\n};\r\n\r\nawait site.DEFINE('/api/*', dynamicHeader);\n"})}),"\n",(0,i.jsx)(n.h2,{id:"content-management",children:"Content Management"}),"\n",(0,i.jsx)(n.h3,{id:"uploading-content",children:"Uploading Content"}),"\n",(0,i.jsx)(n.p,{children:"Upload files to your site:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Upload entire directory\r\nnpx hardhat site:upload \\\r\n  --site 0x1234... \\\r\n  --source ./public \\\r\n  --network localhost\r\n\r\n# Upload specific file\r\nnpx hardhat site:upload \\\r\n  --site 0x1234... \\\r\n  --source ./index.html \\\r\n  --path /index.html \\\r\n  --network localhost\n"})}),"\n",(0,i.jsx)(n.h3,{id:"programmatic-upload",children:"Programmatic Upload"}),"\n",(0,i.jsx)(n.p,{children:"Upload content programmatically:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Upload HTML file\r\nconst htmlContent = ethers.toUtf8Bytes(`\r\n<!DOCTYPE html>\r\n<html>\r\n<head><title>My Site</title></head>\r\n<body><h1>Hello World</h1></body>\r\n</html>\r\n`);\r\n\r\nconst dataRegistration = [{\r\n  data: htmlContent,\r\n  publisher: signer.address\r\n}];\r\n\r\nawait site.PUT('/index.html', dataRegistration);\n"})}),"\n",(0,i.jsx)(n.h3,{id:"batch-upload",children:"Batch Upload"}),"\n",(0,i.jsx)(n.p,{children:"Upload multiple files efficiently:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Upload multiple files in a single transaction\r\nconst files = [\r\n  { path: '/index.html', content: htmlContent },\r\n  { path: '/style.css', content: cssContent },\r\n  { path: '/script.js', content: jsContent }\r\n];\r\n\r\nconst dataRegistrations = files.map(file => ({\r\n  data: file.content,\r\n  publisher: signer.address\r\n}));\r\n\r\nawait site.PUT('/batch-upload', dataRegistrations);\n"})}),"\n",(0,i.jsx)(n.h2,{id:"site-monitoring",children:"Site Monitoring"}),"\n",(0,i.jsx)(n.h3,{id:"health-checks",children:"Health Checks"}),"\n",(0,i.jsx)(n.p,{children:"Monitor your site's health:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Check if site is responding\r\nconst healthCheck = await site.HEAD({ path: '/' });\r\nconsole.log('Site status:', healthCheck.status);\r\n\r\n// Check specific resources\r\nconst resourceCheck = await site.HEAD({ path: '/api/health' });\r\nconsole.log('API status:', resourceCheck.status);\n"})}),"\n",(0,i.jsx)(n.h3,{id:"usage-analytics",children:"Usage Analytics"}),"\n",(0,i.jsx)(n.p,{children:"Track site usage by monitoring contract events:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Get site statistics by monitoring events\r\n// Note: You'll need to implement event monitoring in your application\r\n// or use a service like The Graph to index contract events\r\n\r\n// Example: Monitor resource creation events\r\nsite.on('PUTSuccess', (sender, response) => {\r\n  console.log('New resource created:', response.head.metadata);\r\n});\r\n\r\nsite.on('PATCHSuccess', (sender, response) => {\r\n  console.log('Resource updated:', response.head.metadata);\r\n});\n"})}),"\n",(0,i.jsx)(n.h3,{id:"performance-monitoring",children:"Performance Monitoring"}),"\n",(0,i.jsx)(n.p,{children:"Monitor site performance:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Measure response times\r\nconst startTime = Date.now();\r\nconst response = await site.GET({ path: '/large-file.pdf' });\r\nconst responseTime = Date.now() - startTime;\r\n\r\nconsole.log('Response time:', responseTime, 'ms');\r\nconsole.log('Content size:', response.data.length, 'bytes');\n"})}),"\n",(0,i.jsx)(n.h2,{id:"content-updates",children:"Content Updates"}),"\n",(0,i.jsx)(n.h3,{id:"updating-existing-content",children:"Updating Existing Content"}),"\n",(0,i.jsx)(n.p,{children:"Update content using PUT or PATCH:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Complete replacement\r\nconst newContent = ethers.toUtf8Bytes('<h1>Updated Content</h1>');\r\nawait site.PUT('/index.html', [{ data: newContent, publisher: signer.address }]);\r\n\r\n// Partial update\r\nconst patchData = ethers.toUtf8Bytes('updated section');\r\nconst range = { start: 100, end: 200 };\r\nawait site.PATCH('/index.html', range, patchData);\n"})}),"\n",(0,i.jsx)(n.h3,{id:"version-control",children:"Version Control"}),"\n",(0,i.jsx)(n.p,{children:"Implement version control for your content:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Create versioned content\r\nconst version = Date.now();\r\nawait site.PUT(`/v${version}/index.html`, [{ data: content, publisher: signer.address }]);\r\n\r\n// Update current version\r\nawait site.DEFINE('/index.html', {\r\n  redirect: { code: 302, location: `/v${version}/index.html` }\r\n});\n"})}),"\n",(0,i.jsx)(n.h3,{id:"rollback-capability",children:"Rollback Capability"}),"\n",(0,i.jsx)(n.p,{children:"Implement rollback functionality:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Store previous version\r\nconst previousVersion = await site.getContentHash('/index.html');\r\nawait site.createResourceReference('/index.html.backup', previousVersion);\r\n\r\n// Rollback to previous version\r\nconst backupHash = await site.getContentHash('/index.html.backup');\r\nawait site.updateResourceContent('/index.html', backupHash);\n"})}),"\n",(0,i.jsx)(n.h2,{id:"site-maintenance",children:"Site Maintenance"}),"\n",(0,i.jsx)(n.h3,{id:"content-cleanup",children:"Content Cleanup"}),"\n",(0,i.jsx)(n.p,{children:"Remove unused content:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Delete old content\r\nawait site.DELETE('/old-file.html');\r\n\r\n// Clean up unused resources\r\nconst unusedResources = await site.getUnusedResources();\r\nfor (const resource of unusedResources) {\r\n  await site.DELETE(resource.path);\r\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"performance-optimization",children:"Performance Optimization"}),"\n",(0,i.jsx)(n.p,{children:"Optimize site performance:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Compress content\r\nconst compressedContent = gzipSync(originalContent);\r\nawait site.PUT('/compressed-file.html', [{ data: compressedContent, publisher: signer.address }]);\r\n\r\n// Set appropriate headers\r\nconst optimizedHeader: HeaderInfo = {\r\n  cors: { methods: 0x004, origins: Array(9).fill(PUBLIC_ROLE) },\r\n  cache: { maxAge: 86400, immutableFlag: true }, // 1 day\r\n  redirect: { code: 0, location: '' }\r\n};\r\n\r\nawait site.DEFINE('/static/*', optimizedHeader);\n"})}),"\n",(0,i.jsx)(n.h3,{id:"security-updates",children:"Security Updates"}),"\n",(0,i.jsx)(n.p,{children:"Keep your site secure:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Update permissions\r\nconst newRole = ethers.keccak256(ethers.toUtf8Bytes('/admin/*'));\r\nawait site.createResourceRole(newRole);\r\nawait site.grantRole(newRole, newAdminAddress);\r\n\r\n// Revoke old permissions\r\nawait site.revokeRole(oldRole, oldAdminAddress);\n"})}),"\n",(0,i.jsx)(n.h2,{id:"site-backup-and-recovery",children:"Site Backup and Recovery"}),"\n",(0,i.jsx)(n.h3,{id:"backup-creation",children:"Backup Creation"}),"\n",(0,i.jsx)(n.p,{children:"Create site backups by monitoring contract events:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Note: Backup requires monitoring contract events\r\n// You'll need to implement event monitoring or use a service like The Graph\r\n\r\n// Example backup structure\r\nconst backup = {\r\n  siteAddress: site.address,\r\n  resources: [],\r\n  timestamp: Date.now()\r\n};\r\n\r\n// Monitor events to build backup\r\nsite.on('PUTSuccess', (sender, response) => {\r\n  backup.resources.push({\r\n    path: response.head.metadata.properties.path,\r\n    contentLength: response.head.metadata.properties.contentLength,\r\n    contentType: response.head.metadata.properties.contentType,\r\n    dataPoints: response.resource.dataPoints\r\n  });\r\n});\r\n\r\n// Save backup to file\r\nfs.writeFileSync('site-backup.json', JSON.stringify(backup, null, 2));\n"})}),"\n",(0,i.jsx)(n.h3,{id:"site-recovery",children:"Site Recovery"}),"\n",(0,i.jsx)(n.p,{children:"Restore from backup:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Load backup\r\nconst backup = JSON.parse(fs.readFileSync('site-backup.json', 'utf8'));\r\n\r\n// Restore resources\r\nfor (const resource of backup.resources) {\r\n  const putRequest = {\r\n    head: { path: resource.path },\r\n    properties: {\r\n      contentType: resource.contentType,\r\n      contentLength: resource.contentLength\r\n    },\r\n    data: [] // Would need to reconstruct from dataPoints\r\n  };\r\n  await site.PUT(putRequest);\r\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"multi-site-management",children:"Multi-Site Management"}),"\n",(0,i.jsx)(n.h3,{id:"site-registry",children:"Site Registry"}),"\n",(0,i.jsx)(n.p,{children:"Manage multiple sites:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Deploy multiple sites\r\nconst sites = [];\r\nfor (let i = 0; i < 3; i++) {\r\n  const site = await deploySite(`Site ${i}`);\r\n  sites.push(site);\r\n}\r\n\r\n// Track sites in your application\r\nconst siteRegistry = {\r\n  sites: sites.map(site => ({\r\n    address: site.address,\r\n    name: `Site ${sites.indexOf(site)}`,\r\n    deployedAt: Date.now()\r\n  }))\r\n};\n"})}),"\n",(0,i.jsx)(n.h3,{id:"site-federation",children:"Site Federation"}),"\n",(0,i.jsx)(n.p,{children:"Federate multiple sites:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Create roles for federated sites\r\nconst site1Role = ethers.keccak256(ethers.toUtf8Bytes('SITE1_ROLE'));\r\nconst site2Role = ethers.keccak256(ethers.toUtf8Bytes('SITE2_ROLE'));\r\nconst site3Role = ethers.keccak256(ethers.toUtf8Bytes('SITE3_ROLE'));\r\n\r\nawait site.createResourceRole(site1Role);\r\nawait site.createResourceRole(site2Role);\r\nawait site.createResourceRole(site3Role);\r\n\r\n// Grant roles to site addresses\r\nawait site.grantRole(site1Role, site1Address);\r\nawait site.grantRole(site2Role, site2Address);\r\nawait site.grantRole(site3Role, site3Address);\r\n\r\n// Configure cross-site CORS\r\nconst federationHeader: HeaderInfo = {\r\n  cors: {\r\n    methods: 0xffff,\r\n    origins: [\r\n      site1Role, // Method 0 (HEAD)\r\n      site1Role, // Method 1 (GET)\r\n      site1Role, // Method 2 (POST)\r\n      site2Role, // Method 3 (PUT)\r\n      site2Role, // Method 4 (PATCH)\r\n      site1Role, // Method 5 (DELETE)\r\n      site1Role, // Method 6 (OPTIONS)\r\n      site1Role, // Method 7 (LOCATE)\r\n      site1Role  // Method 8 (DEFINE)\r\n    ]\r\n  },\r\n  cache: { maxAge: 3600, immutableFlag: false },\r\n  redirect: { code: 0, location: '' }\r\n};\r\n\r\nawait site.DEFINE({ head: { path: '/federated' }, data: federationHeader });\n"})}),"\n",(0,i.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Deployment Failures"}),": Check gas limits and network connectivity"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Upload Errors"}),": Verify file permissions and content size"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Access Issues"}),": Check CORS configuration and permissions"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Performance Problems"}),": Optimize content and caching"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"debugging-tools",children:"Debugging Tools"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Enable debug logging\r\nconst debugMode = true;\r\nif (debugMode) {\r\n  console.log('Site address:', site.address);\r\n  console.log('Network:', await site.provider.getNetwork());\r\n  console.log('Owner:', await site.owner());\r\n}\r\n\r\n// Check site health by testing basic functionality\r\nconst healthCheck = await site.HEAD({ path: '/' });\r\nconsole.log('Site health status:', healthCheck.status);\n"})}),"\n",(0,i.jsx)(n.h3,{id:"recovery-procedures",children:"Recovery Procedures"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Site Unresponsive"}),": Check contract state and network connectivity"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Content Missing"}),": Verify resource existence and permissions"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Permission Issues"}),": Review role assignments and CORS settings"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Performance Degradation"}),": Analyze usage patterns and optimize content"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsx)(n.h3,{id:"1-site-design",children:"1. Site Design"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Plan your site structure before deployment"}),"\n",(0,i.jsx)(n.li,{children:"Use logical directory hierarchies"}),"\n",(0,i.jsx)(n.li,{children:"Implement consistent naming conventions"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"2-content-management",children:"2. Content Management"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Regular backups and version control"}),"\n",(0,i.jsx)(n.li,{children:"Monitor usage and performance"}),"\n",(0,i.jsx)(n.li,{children:"Optimize content for your use case"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"3-security",children:"3. Security"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Implement least-privilege access control"}),"\n",(0,i.jsx)(n.li,{children:"Regular security audits"}),"\n",(0,i.jsx)(n.li,{children:"Monitor for unauthorized changes"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"4-performance",children:"4. Performance"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Use appropriate caching strategies"}),"\n",(0,i.jsx)(n.li,{children:"Optimize content size and format"}),"\n",(0,i.jsx)(n.li,{children:"Monitor and analyze performance metrics"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"related-documentation",children:"Related Documentation"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/docs/esp/esp-overview",children:"ESP Overview"})," - Learn about the Ethereum Storage Protocol"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/docs/esp/esp-storage",children:"ESP Storage"})," - Detailed storage mechanisms"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var r=t(6540);const i={},s=r.createContext(i);function a(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);